/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

body {
  /* 4. Add accessible line-height */
  line-height: 1.5;
  /* 5. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}

/* 6. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}

/* 8. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/* CSS Custom Properties - Green/Teal Design System */
:root {
  /* Border radius system */
  --radius: 8px;
  --radius-sm: 4px;
  --radius-lg: 12px;

  --1: 0.25rem; /* 4px */
  --2: 0.5rem; /* 8px */
  --3: 0.75rem; /* 12px */
  --4: 1rem; /* 16px */
  --5: 1.25rem; /* 20px */
  --6: 1.5rem; /* 24px */
  --8: 2rem; /* 32px */
  --10: 2.5rem; /* 40px */
  --12: 3rem; /* 48px */
  --16: 4rem; /* 64px */
  --7xl: 80rem; /* 1280px */

  /* Light mode - Green/Teal theme with high contrast */
  --bg: hsl(0, 0%, 100%); /* Pure white */
  --bg-secondary: hsl(150, 20%, 97%); /* Very light green-gray */
  --text: hsl(0, 0%, 9%); /* Almost black for max contrast */
  --text-muted: hsl(0, 0%, 45%); /* Medium gray */
  --border: hsl(150, 15%, 85%); /* Light green-gray border */

  --primary: hsl(170, 76%, 32%); /* Deep teal-green */
  --primary-foreground: hsl(0, 0%, 100%); /* White text */
  --secondary: hsl(0, 0%, 20%); /* Dark gray */
  --secondary-foreground: hsl(0, 0%, 100%); /* White text */
  --accent: hsl(162, 88%, 26%); /* Rich green */
  --accent-foreground: hsl(0, 0%, 100%); /* White text */
  --success: hsl(145, 85%, 25%); /* Forest green */
  --success-foreground: hsl(0, 0%, 100%); /* White text */
  --warning: hsl(38, 92%, 45%); /* Amber (darker for contrast) */
  --warning-foreground: hsl(0, 0%, 9%); /* Dark text */
  --destructive: hsl(0, 72%, 45%); /* Red (darker for contrast) */
  --destructive-foreground: hsl(0, 0%, 100%); /* White text */
}

/* Dark mode - Green/Teal for dark backgrounds */
[data-theme="dark"] {
  --bg: hsl(150, 15%, 8%); /* Very dark green-gray */
  --bg-secondary: hsl(150, 12%, 12%); /* Slightly lighter dark green */
  --text: hsl(0, 0%, 95%); /* Off-white */
  --text-muted: hsl(0, 0%, 65%); /* Light gray */
  --border: hsl(150, 15%, 18%); /* Dark green-gray border */

  --primary: hsl(170, 76%, 42%); /* Brighter teal for dark mode */
  --secondary: hsl(150, 10%, 22%); /* Dark green-gray */
  --accent: hsl(162, 88%, 36%); /* Brighter green */
  --success: hsl(145, 85%, 35%); /* Brighter forest green */
  --warning: hsl(38, 92%, 55%); /* Brighter amber */
  --destructive: hsl(0, 72%, 55%); /* Brighter red */
}

body {
  font-family: monospace;
  font-size: 120%;
}

#app {
  display: flex;
  flex-direction: column;
  gap: var(--8);
}

.nav {
  height: var(--16);
  padding: 0 var(--4);
  color: var(--secondary-foreground);
  background-color: var(--secondary);
  > div {
    margin: 0 auto;
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  a,
  a:visited {
    color: var(--secondary-foreground);
    text-decoration: none;
  }
}

.gap-4 {
  display: flex;
  gap: var(--4);
}

.grid {
  border-top: 2px dashed #9c9c9c;
  border-left: 2px dashed #9c9c9c;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  > div {
    border-right: 2px dashed #9c9c9c;
    border-bottom: 2px dashed #9c9c9c;
    padding: var(--4);
  }
}

.about-main {
  grid-column: span 2;
  grid-row: span 2;
}

.about-subsection {
  grid-column: span 4;
  grid-row: span 1;
}

.mx-auto {
  margin: 0 auto;
}
.p-4 {
  padding: var(--4);
}
.py-8 {
  padding: var(--8) 0;
}

.max-w-container {
  max-width: var(--7xl);
}

/* Utility classes */
.rounded {
  border-radius: var(--radius);
}
.rounded-sm {
  border-radius: var(--radius-sm);
}
.rounded-lg {
  border-radius: var(--radius-lg);
}

/* Background utilities */
.bg-primary {
  background: var(--bg);
}
.bg-secondary {
  background: var(--bg-secondary);
}
.text-primary {
  color: var(--text);
}
.text-muted {
  color: var(--text-muted);
}
.border-primary {
  border-color: var(--border);
}

/* Component classes */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.25rem;
  border-radius: var(--radius);
  border: none;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  text-decoration: none;
}

.btn:focus {
  outline: none;
  box-shadow:
    0 0 0 2px var(--bg),
    0 0 0 4px var(--primary);
}

.btn-primary {
  background: var(--primary);
  color: var(--primary-foreground);
}
.btn-primary:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
}

.btn-secondary {
  background: var(--secondary);
  color: var(--secondary-foreground);
}
.btn-secondary:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
}

.btn-accent {
  background: var(--accent);
  color: var(--accent-foreground);
}
.btn-accent:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
}

.btn-success {
  background: var(--success);
  color: var(--success-foreground);
}
.btn-success:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
}

.btn-warning {
  background: var(--warning);
  color: var(--warning-foreground);
}
.btn-warning:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
}

.btn-destructive {
  background: var(--destructive);
  color: var(--destructive-foreground);
}
.btn-destructive:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
}

.btn-outline {
  background: transparent;
  color: var(--primary);
  border: 2px solid var(--primary);
}
.btn-outline:hover {
  background: var(--primary);
  color: var(--primary-foreground);
}

.btn-ghost {
  background: transparent;
  color: var(--text);
}
.btn-ghost:hover {
  background: var(--bg-secondary);
}

/* Card component */
.card {
  background: var(--bg);
  border: 1px solid var(--border);
  border-radius: var(--radius-lg);
  padding: 1.5rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.2s ease-in-out;
}

.card:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.card-header {
  margin-bottom: 1rem;
}

.card-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text);
  margin: 0 0 0.5rem 0;
}

.card-description {
  color: var(--text-muted);
  margin: 0;
}

/* Input components */
.input {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--border);
  border-radius: var(--radius);
  background: var(--bg);
  color: var(--text);
  font-size: 0.875rem;
  transition: border-color 0.2s ease-in-out;
}

.input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px var(--primary);
}

.input::placeholder {
  color: var(--text-muted);
}

/* Badge component */
.badge {
  display: inline-flex;
  align-items: center;
  padding: 0.25rem 0.5rem;
  font-size: 0.75rem;
  font-weight: 500;
  border-radius: var(--radius-sm);
}

.badge-primary {
  background: var(--primary);
  color: var(--primary-foreground);
}

.badge-secondary {
  background: var(--secondary);
  color: var(--secondary-foreground);
}

.badge-success {
  background: var(--success);
  color: var(--success-foreground);
}

.badge-warning {
  background: var(--warning);
  color: var(--warning-foreground);
}

.badge-destructive {
  background: var(--destructive);
  color: var(--destructive-foreground);
}

/* Elements/Components */

.tech-card {
  .tech-card-top-row {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .tech-card-title {
    color: var(--accent);
    font-weight: 700;
  }
  a:hover {
    text-decoration: underline;
  }
  p:last-child {
    padding-top: var(--4);
  }
}

.route-container {
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}
